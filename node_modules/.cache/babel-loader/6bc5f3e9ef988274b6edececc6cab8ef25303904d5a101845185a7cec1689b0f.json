{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport SideNavIcon from './SideNavIcon.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\nvar _ChevronDown;\nconst SideNavMenu = /*#__PURE__*/React__default.forwardRef(function SideNavMenu(props, ref) {\n  const {\n    className: customClassName,\n    children,\n    defaultExpanded = false,\n    isActive = false,\n    large = false,\n    renderIcon: IconElement,\n    isSideNavExpanded,\n    title\n  } = props;\n  const prefix = usePrefix();\n  const [isExpanded, setIsExpanded] = useState(defaultExpanded);\n  const [prevExpanded, setPrevExpanded] = useState(defaultExpanded);\n  const className = cx({\n    [`${prefix}--side-nav__item`]: true,\n    [`${prefix}--side-nav__item--active`]: isActive || hasActiveChild(children) && !isExpanded,\n    [`${prefix}--side-nav__item--icon`]: IconElement,\n    [`${prefix}--side-nav__item--large`]: large,\n    [customClassName]: !!customClassName\n  });\n  if (isSideNavExpanded === false && isExpanded === true) {\n    setIsExpanded(false);\n    setPrevExpanded(true);\n  } else if (isSideNavExpanded === true && prevExpanded === true) {\n    setIsExpanded(true);\n    setPrevExpanded(false);\n  }\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    React__default.createElement(\"li\", {\n      className: className,\n      onKeyDown: event => {\n        if (match(event, Escape)) {\n          setIsExpanded(false);\n        }\n      }\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      \"aria-expanded\": isExpanded,\n      className: `${prefix}--side-nav__submenu`,\n      onClick: () => {\n        setIsExpanded(!isExpanded);\n      },\n      ref: ref,\n      type: \"button\"\n    }, IconElement && /*#__PURE__*/React__default.createElement(SideNavIcon, null, /*#__PURE__*/React__default.createElement(IconElement, null)), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--side-nav__submenu-title`,\n      title: title\n    }, title), /*#__PURE__*/React__default.createElement(SideNavIcon, {\n      className: `${prefix}--side-nav__submenu-chevron`,\n      small: true\n    }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, {\n      size: 20\n    })))), /*#__PURE__*/React__default.createElement(\"ul\", {\n      className: `${prefix}--side-nav__menu`\n    }, children))\n  );\n});\nSideNavMenu.displayName = 'SideNavMenu';\nSideNavMenu.propTypes = {\n  /**\n   * Provide <SideNavMenuItem>'s inside of the `SideNavMenu`\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the menu should default to expanded. By default, it will\n   * be closed.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * Specify whether the `SideNavMenu` is \"active\". `SideNavMenu` should be\n   * considered active if one of its menu items are a link for the current\n   * page.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool,\n  /**\n   * Specify if this is a large variation of the SideNavMenu\n   */\n  large: PropTypes.bool,\n  /**\n   * Pass in a custom icon to render next to the `SideNavMenu` title\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Provide the text for the overall menu name\n   */\n  title: PropTypes.string.isRequired\n};\nfunction hasActiveChild(children) {\n  // if we have children, either a single or multiple, find if it is active\n  if (Array.isArray(children)) {\n    return children.some(child => {\n      if (!child.props) {\n        return false;\n      }\n      if (child.props.isActive === true) {\n        return true;\n      }\n      if (child.props['aria-current']) {\n        return true;\n      }\n      return false;\n    });\n  }\n  if (children.props) {\n    if (children.props.isActive === true || children.props['aria-current']) {\n      return true;\n    }\n  }\n  return false;\n}\nvar SideNavMenu$1 = SideNavMenu;\nexport { SideNavMenu, SideNavMenu$1 as default };","map":{"version":3,"names":["ChevronDown","cx","PropTypes","React__default","useState","SideNavIcon","usePrefix","match","Escape","_ChevronDown","SideNavMenu","forwardRef","props","ref","className","customClassName","children","defaultExpanded","isActive","large","renderIcon","IconElement","isSideNavExpanded","title","prefix","isExpanded","setIsExpanded","prevExpanded","setPrevExpanded","hasActiveChild","createElement","onKeyDown","event","onClick","type","small","size","displayName","propTypes","node","string","bool","oneOfType","func","object","isRequired","Array","isArray","some","child","SideNavMenu$1","default"],"sources":["/Users/balerinabrc/Desktop/Dulce_Beauty-FinalVersion/node_modules/@carbon/react/es/components/UIShell/SideNavMenu.js"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { ChevronDown } from '@carbon/icons-react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default, { useState } from 'react';\nimport SideNavIcon from './SideNavIcon.js';\nimport { usePrefix } from '../../internal/usePrefix.js';\nimport { match } from '../../internal/keyboard/match.js';\nimport { Escape } from '../../internal/keyboard/keys.js';\n\nvar _ChevronDown;\nconst SideNavMenu = /*#__PURE__*/React__default.forwardRef(function SideNavMenu(props, ref) {\n  const {\n    className: customClassName,\n    children,\n    defaultExpanded = false,\n    isActive = false,\n    large = false,\n    renderIcon: IconElement,\n    isSideNavExpanded,\n    title\n  } = props;\n  const prefix = usePrefix();\n  const [isExpanded, setIsExpanded] = useState(defaultExpanded);\n  const [prevExpanded, setPrevExpanded] = useState(defaultExpanded);\n  const className = cx({\n    [`${prefix}--side-nav__item`]: true,\n    [`${prefix}--side-nav__item--active`]: isActive || hasActiveChild(children) && !isExpanded,\n    [`${prefix}--side-nav__item--icon`]: IconElement,\n    [`${prefix}--side-nav__item--large`]: large,\n    [customClassName]: !!customClassName\n  });\n  if (isSideNavExpanded === false && isExpanded === true) {\n    setIsExpanded(false);\n    setPrevExpanded(true);\n  } else if (isSideNavExpanded === true && prevExpanded === true) {\n    setIsExpanded(true);\n    setPrevExpanded(false);\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    React__default.createElement(\"li\", {\n      className: className,\n      onKeyDown: event => {\n        if (match(event, Escape)) {\n          setIsExpanded(false);\n        }\n      }\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      \"aria-expanded\": isExpanded,\n      className: `${prefix}--side-nav__submenu`,\n      onClick: () => {\n        setIsExpanded(!isExpanded);\n      },\n      ref: ref,\n      type: \"button\"\n    }, IconElement && /*#__PURE__*/React__default.createElement(SideNavIcon, null, /*#__PURE__*/React__default.createElement(IconElement, null)), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: `${prefix}--side-nav__submenu-title`,\n      title: title\n    }, title), /*#__PURE__*/React__default.createElement(SideNavIcon, {\n      className: `${prefix}--side-nav__submenu-chevron`,\n      small: true\n    }, _ChevronDown || (_ChevronDown = /*#__PURE__*/React__default.createElement(ChevronDown, {\n      size: 20\n    })))), /*#__PURE__*/React__default.createElement(\"ul\", {\n      className: `${prefix}--side-nav__menu`\n    }, children))\n  );\n});\nSideNavMenu.displayName = 'SideNavMenu';\nSideNavMenu.propTypes = {\n  /**\n   * Provide <SideNavMenuItem>'s inside of the `SideNavMenu`\n   */\n  children: PropTypes.node,\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify whether the menu should default to expanded. By default, it will\n   * be closed.\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * Specify whether the `SideNavMenu` is \"active\". `SideNavMenu` should be\n   * considered active if one of its menu items are a link for the current\n   * page.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool,\n  /**\n   * Specify if this is a large variation of the SideNavMenu\n   */\n  large: PropTypes.bool,\n  /**\n   * Pass in a custom icon to render next to the `SideNavMenu` title\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Provide the text for the overall menu name\n   */\n  title: PropTypes.string.isRequired\n};\nfunction hasActiveChild(children) {\n  // if we have children, either a single or multiple, find if it is active\n  if (Array.isArray(children)) {\n    return children.some(child => {\n      if (!child.props) {\n        return false;\n      }\n      if (child.props.isActive === true) {\n        return true;\n      }\n      if (child.props['aria-current']) {\n        return true;\n      }\n      return false;\n    });\n  }\n  if (children.props) {\n    if (children.props.isActive === true || children.props['aria-current']) {\n      return true;\n    }\n  }\n  return false;\n}\nvar SideNavMenu$1 = SideNavMenu;\n\nexport { SideNavMenu, SideNavMenu$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}