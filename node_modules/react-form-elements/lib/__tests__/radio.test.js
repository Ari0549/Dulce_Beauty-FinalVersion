"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _radio = _interopRequireDefault(require("../radio"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Radio component', () => {
  afterEach(() => {
    (0, _react2.cleanup)();
  });
  describe('The Rendered HTML', () => {
    it('should have a label', () => {
      var {
        getByText,
        container
      } = (0, _react2.render)(_react.default.createElement(_radio.default, {
        label: "My Checkbox Label",
        value: "myradio"
      }));
      expect(container.firstChild).toMatchSnapshot();
      var label = getByText('My Checkbox Label');
      expect(label.textContent).toBe('My Checkbox Label');
    });
  });
  describe('handling input', () => {
    it('should set a value when passed in', () => {
      var {
        getByLabelText,
        container
      } = (0, _react2.render)(_react.default.createElement(_radio.default, {
        label: "My Label",
        isChecked: true,
        value: "myradio"
      }));
      expect(container.firstChild).toMatchSnapshot();
      var input = getByLabelText('My Label');
      expect(input.checked).toBe(true);
    });
    it('should update a value when changed in', () => {
      var {
        getByLabelText,
        container
      } = (0, _react2.render)(_react.default.createElement(_radio.default, {
        label: "My Label",
        isChecked: false,
        value: "myradio"
      }));
      expect(container.firstChild).toMatchSnapshot();
      var input = getByLabelText('My Label');
      expect(input.checked).toBe(false);

      _react2.fireEvent.click(input);

      expect(input.value).toBe('myradio');
      expect(input.checked).toBe(true);
    });
  });
});