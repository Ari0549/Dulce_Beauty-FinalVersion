"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _input = _interopRequireDefault(require("../input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Input component', () => {
  afterEach(() => {
    (0, _react2.cleanup)();
  });
  describe('The Rendered HTML', () => {
    it('should render input element', () => {
      var {
        container
      } = (0, _react2.render)(_react.default.createElement(_input.default, {
        initialValue: ""
      }));
      expect(container.firstChild).toMatchSnapshot();
    });
    it('should have a placeholder when passed', () => {
      var {
        container
      } = (0, _react2.render)(_react.default.createElement(_input.default, {
        initialValue: "",
        placeholder: "textbox placeholder"
      }));
      expect(container.firstChild).toMatchSnapshot();
    });
  });
  describe('handling input', () => {
    it('should set a value when passed in', () => {
      var {
        container
      } = (0, _react2.render)(_react.default.createElement(_input.default, {
        initialValue: "My Input Value"
      }));
      expect(container.firstChild).toMatchSnapshot();
      var input = container.firstChild;
      expect(input.value).toBe('My Input Value');
    });
    it('should update a value when changed', () => {
      var {
        container
      } = (0, _react2.render)(_react.default.createElement(_input.default, {
        initialValue: "My Input Value"
      }));
      var input = container.firstChild;

      _react2.fireEvent.change(input, {
        target: {
          value: 'Updated Value'
        }
      });

      expect(input.value).toBe('Updated Value');
      expect(container.firstChild).toMatchSnapshot();
    });
  });
});