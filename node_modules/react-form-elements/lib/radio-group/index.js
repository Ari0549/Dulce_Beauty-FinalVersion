"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _useId = _interopRequireDefault(require("../utils/use-id"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var useGroupedElement = (initialChecked, ref) => {
  var [checked, setChecked] = (0, _react.useState)(initialChecked);

  var handleChange = e => {
    setChecked(e.currentTarget.value);
  };

  var inputRef = (0, _react.useRef)();
  (0, _react.useImperativeHandle)(ref, () => ({
    getValue: () => {
      return inputRef.current.value;
    },
    isValid: () => {
      return true; // this is always valid at this stage
    }
  }));
  return {
    checked,
    inputRef,
    handleChange
  };
};
/**
 * RadioGroup Component.
 *
 */


var RadioGroup = (0, _react.forwardRef)((_ref, ref) => {
  var {
    name,
    options,
    label,
    initialChecked
  } = _ref,
      otherProps = _objectWithoutProperties(_ref, ["name", "options", "label", "initialChecked"]);

  var {
    checked,
    inputRef,
    handleChange
  } = useGroupedElement(initialChecked, ref);
  var radios = options.map((option, index) => {
    var id = (0, _useId.default)();
    return _react.default.createElement("div", {
      className: "rfe-radiogroup__row",
      key: "radio-group-".concat(index)
    }, _react.default.createElement("label", {
      htmlFor: id
    }, " ", option.label, " "), _react.default.createElement("input", {
      id: id,
      name: name,
      type: "radio",
      onChange: handleChange,
      value: option.value,
      checked: checked === option.value
    }));
  });
  return _react.default.createElement("div", {
    className: "rfe-form__row rfe-radiogroup"
  }, _react.default.createElement("label", null, label || ''), radios, _react.default.createElement("input", {
    type: "hidden",
    ref: inputRef,
    value: checked
  }));
});
RadioGroup.propTypes = {
  name: _propTypes.default.string,
  label: _propTypes.default.string,
  options: _propTypes.default.array,
  initialChecked: _propTypes.default.string
};
RadioGroup.defaultProps = {
  label: 'label',
  options: []
};
RadioGroup.displayName = 'ReactFormElements(RadioGroup)';
var _default = RadioGroup;
exports.default = _default;