{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport imageExpert1 from './imgExpert1.png';\nimport Collapse from 'react-bootstrap/Collapse';\nimport salt from './Himalayan_Salt.png';\nimport detox from './Detox_And_Cellulite.png';\nimport foot from './Foot_Care.png';\nimport cleansing from './Cleansing_Facial.png';\nimport gua from './Facial_Gua_Sha.png';\nimport anti from './Cleansing_Facial.png';\nimport keratin from './Keratin_Treatment.png';\nimport lashes from './Lashes.png';\nimport laser from './Laser.png';\n\n//nouveau ajouté\nimport { data } from \"./serv_data\";\nimport TypeServ from \"./typeService\";\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Facets_container from './Facets_container';\n//import Heuristics from './heuristics';\n\nfunction Services() {\n  _s();\n  const build_categorical_facet_values = name => {\n    const values = [...new Set(data.map(item => item[name]))];\n    return values.map(value => ({\n      'name': value,\n      'checked': false\n    }));\n  };\n\n  //Initial state\n  const [state, setState] = useState({\n    //all_clothes: data,\n    //shown_clothes: data,\n    all_services: data,\n    shown_services: data,\n    facets: {\n      // PAS BESOIN DE COLOR\n      color: build_categorical_facet_values('color'),\n      category: build_categorical_facet_values('category')\n    }\n  });\n\n  //Updates state.shown_clothes whenever state.facets changes\n  useEffect(() => {\n    const facets = {};\n    // Get all the facet values that are true/active/selected.\n    Object.entries(state.facets).forEach(_ref => {\n      let [name, values] = _ref;\n      facets[name] = [];\n      values.forEach(value => {\n        if (value.checked) {\n          facets[name].push(value.name);\n        }\n      });\n    });\n\n    // If there are no facets selected, show all services\n    if (Object.values(facets).every(arr => arr.length === 0)) {\n      setState({\n        ...state,\n        shown_services: state.all_services\n      });\n      return;\n    }\n\n    // Getting the number of active facet (Not facet_values)\n    const number_of_active_facets = Object.values(facets).filter(x => x.length).length;\n\n    // Double loop through all services and all active facets\n    // Keep only the services that match the active facets\n    const to_show = state.all_services.map(serv => Object.entries(facets).map(_ref2 => {\n      let [name, values] = _ref2;\n      return values.includes(serv[name]);\n    }).filter(Boolean).length == number_of_active_facets ? serv : undefined).filter(Boolean);\n    setState({\n      ...state,\n      shown_services: to_show\n    });\n  }, [state.facets]);\n}\n_s(Services, \"tANuZ7t9GZVcwt46mS1OYA67NVY=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","Form","Button","Card","imageExpert1","Collapse","salt","detox","foot","cleansing","gua","anti","keratin","lashes","laser","data","TypeServ","CardGroup","Facets_container","Services","_s","build_categorical_facet_values","name","values","Set","map","item","value","state","setState","all_services","shown_services","facets","color","category","Object","entries","forEach","_ref","checked","push","every","arr","length","number_of_active_facets","filter","x","to_show","serv","_ref2","includes","Boolean","undefined","_c","$RefreshReg$"],"sources":["/Users/balerinabrc/Desktop/Dulce_Beauty-FinalVersion/src/components/Services.js"],"sourcesContent":["import React, {useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; \nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport imageExpert1 from './imgExpert1.png';\nimport Collapse from 'react-bootstrap/Collapse';\nimport salt from './Himalayan_Salt.png';\nimport detox from './Detox_And_Cellulite.png';\nimport foot from './Foot_Care.png';\nimport cleansing from './Cleansing_Facial.png';\nimport gua from './Facial_Gua_Sha.png';\nimport anti from './Cleansing_Facial.png';\nimport keratin from './Keratin_Treatment.png';\nimport lashes from './Lashes.png';\nimport laser from './Laser.png';\n\n\n//nouveau ajouté\nimport { data } from \"./serv_data\";\nimport TypeServ from \"./typeService\";\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Facets_container from './Facets_container';\n//import Heuristics from './heuristics';\n\nfunction Services(){\n\n    const build_categorical_facet_values = (name) => {\n        const values = [... new Set(data.map(item => item[name]))]\n        return values.map(value => ({ 'name': value, 'checked': false }))\n    }\n\n    //Initial state\n    const [state, setState] = useState({\n        //all_clothes: data,\n        //shown_clothes: data,\n        all_services: data,\n        shown_services: data,\n        facets: {\n            // PAS BESOIN DE COLOR\n            color: build_categorical_facet_values('color'),\n            category: build_categorical_facet_values('category')\n        }\n    })\n\n    //Updates state.shown_clothes whenever state.facets changes\n    useEffect(() =>{\n        const facets = {}\n        // Get all the facet values that are true/active/selected.\n        Object.entries(state.facets).forEach(([name, values]) => {\n            facets[name] = []\n            values.forEach(value => {\n                if (value.checked) {\n                    facets[name].push(value.name)\n                }\n            })\n        })\n\n        // If there are no facets selected, show all services\n        if (Object.values(facets).every(arr => arr.length === 0)){\n            setState({ ...state, shown_services: state.all_services})\n            return\n        }\n\n        // Getting the number of active facet (Not facet_values)\n        const number_of_active_facets = Object.values(facets).filter(x => x.length).length\n\n        // Double loop through all services and all active facets\n        // Keep only the services that match the active facets\n        const to_show = state.all_services.map(serv =>\n            Object.entries(facets).map(([name, values]) =>\n            values.includes(serv[name])).filter(Boolean).length == number_of_active_facets ? serv : undefined\n        ).filter(Boolean)\n\n        setState({ ...state, shown_services: to_show})\n    }, [state.facets])\n\n\n}\n\nexport default Services;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}