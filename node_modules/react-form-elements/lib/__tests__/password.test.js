"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _password = _interopRequireDefault(require("../password"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Password component', () => {
  afterEach(() => {
    (0, _react2.cleanup)();
  });
  describe('The Rendered HTML', () => {
    it('should have a label', () => {
      var labelText = 'My Password Label';
      var {
        getByText,
        getByLabelText,
        container
      } = (0, _react2.render)(_react.default.createElement(_password.default, {
        label: labelText
      }));
      expect(container.firstChild).toMatchSnapshot();
      var label = getByText(labelText);
      var input = getByLabelText(labelText);
      expect(label.textContent).toBe(labelText);
      expect(input.type).toBe('password');
    });
  });
  describe('handling input', () => {
    it('should set a value when passed in but not be valid', () => {
      var {
        getByLabelText,
        container
      } = (0, _react2.render)(_react.default.createElement(_password.default, {
        label: "My Example Label",
        initialValue: "password"
      }));
      expect(container.firstChild).toMatchSnapshot();
      var input = getByLabelText('My Example Label');
      expect(input.value).toBe('password');
      expect(input.validity.valid).toBe(true);

      _react2.fireEvent.change(input, {
        target: {
          value: 'Updated Value'
        }
      });

      expect(input.validity.valid).toBe(true);
    });
  });
});