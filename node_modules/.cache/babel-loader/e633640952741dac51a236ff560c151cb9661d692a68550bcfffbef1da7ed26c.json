{"ast":null,"code":"var _jsxFileName = \"/Users/balerinabrc/Desktop/Dulce_Beauty/src/components/Services.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { data } from \"./clothes_data\";\nimport Clothes from './clothes';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport Col from 'react-bootstrap/esm/Col';\nimport Facets_container from './Facets_container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Services() {\n  _s();\n  const build_categorical_facet_values = name => {\n    const values = [...new Set(data.map(item => item[name]))];\n    return values.map(value => ({\n      'name': value,\n      'checked': false\n    }));\n  };\n\n  // Initial state\n  const [state, setState] = useState({\n    all_clothes: data,\n    shown_clothes: data,\n    facets: {\n      color: build_categorical_facet_values('color'),\n      category: build_categorical_facet_values('category')\n    }\n  });\n\n  //Updates state.shown_clothes whenever state.facets changes\n  useEffect(() => {\n    const facets = {};\n    // Get all the facet values that are true/active/selected.\n    Object.entries(state.facets).forEach(_ref => {\n      let [name, values] = _ref;\n      facets[name] = [];\n      values.forEach(value => {\n        if (value.checked) {\n          facets[name].push(value.name);\n        }\n      });\n    });\n\n    // If there are no facets selected, show all clothes\n    if (Object.values(facets).every(arr => arr.length === 0)) {\n      setState({\n        ...state,\n        shown_clothes: state.all_clothes\n      });\n      return;\n    }\n\n    // Getting the number of active facet (Not facet_values)\n    const number_of_active_facets = Object.values(facets).filter(x => x.length).length;\n\n    // Double loop through all clothes and all active facets\n    // Keep only the clothes that match the active facets\n    const to_show = state.all_clothes.map(clothe => Object.entries(facets).map(_ref2 => {\n      let [name, values] = _ref2;\n      return values.includes(clothe[name]);\n    }).filter(Boolean).length == number_of_active_facets ? clothe : undefined).filter(Boolean);\n    setState({\n      ...state,\n      shown_clothes: to_show\n    });\n  }, [state.facets]);\n  function clearAllFacetValues(facet) {\n    const new_facet = state.facets[facet].map(facet_value => ({\n      ...facet_value,\n      checked: false\n    }));\n    setState({\n      ...state,\n      facets: {\n        ...state.facets,\n        [facet]: new_facet\n      }\n    });\n  }\n\n  // Function to pass down to the Facet_value component to modify the state in this component.\n  function updateCategory(facet, value, newChecked) {\n    const new_facet = state.facets[facet].map(_ref3 => {\n      let {\n        name,\n        checked\n      } = _ref3;\n      return {\n        name: name,\n        checked: name == value ? newChecked : checked\n      };\n    });\n    setState({\n      ...state,\n      facets: {\n        ...state.facets,\n        [facet]: new_facet\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"border-end\",\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Facets_container, {\n            facets: state.facets,\n            updateCategory: updateCategory,\n            clearAllFacetValues: clearAllFacetValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"d-flex flex-wrap\",\n            children: state.shown_clothes.map(x => /*#__PURE__*/_jsxDEV(Clothes, {\n              ...x\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Foot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Services, \"HiplfVTk3Zvi3kxfVzHVmC8khC4=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","Component","useEffect","useState","data","Clothes","CardGroup","Container","Row","Col","Facets_container","jsxDEV","_jsxDEV","Services","_s","build_categorical_facet_values","name","values","Set","map","item","value","state","setState","all_clothes","shown_clothes","facets","color","category","Object","entries","forEach","_ref","checked","push","every","arr","length","number_of_active_facets","filter","x","to_show","clothe","_ref2","includes","Boolean","undefined","clearAllFacetValues","facet","new_facet","facet_value","updateCategory","newChecked","_ref3","Router","children","className","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","md","Foot","_c","$RefreshReg$"],"sources":["/Users/balerinabrc/Desktop/Dulce_Beauty/src/components/Services.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { data } from \"./clothes_data\"\nimport Clothes from './clothes';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Container from 'react-bootstrap/esm/Container';\nimport Row from 'react-bootstrap/esm/Row';\nimport Col from 'react-bootstrap/esm/Col';\nimport Facets_container from './Facets_container';\n\n\nfunction Services() {\n\n  const build_categorical_facet_values = (name) => {\n    const values = [...new Set(data.map(item => item[name]))]\n    return values.map(value => ({ 'name': value, 'checked': false }))\n  }\n\n  // Initial state\n  const [state, setState] = useState({\n    all_clothes: data,\n    shown_clothes: data,\n    facets: {\n      color: build_categorical_facet_values('color'),\n      category: build_categorical_facet_values('category')\n    }\n  })\n\n\n  //Updates state.shown_clothes whenever state.facets changes\n  useEffect(() => {\n    const facets = {}\n    // Get all the facet values that are true/active/selected.\n    Object.entries(state.facets).forEach(([name, values]) => {\n      facets[name] = []\n      values.forEach(value => {\n        if (value.checked) {\n          facets[name].push(value.name)\n        }\n      })\n    })\n\n    // If there are no facets selected, show all clothes\n    if (Object.values(facets).every(arr => arr.length === 0)) {\n      setState({ ...state, shown_clothes: state.all_clothes })\n      return\n    }\n\n    // Getting the number of active facet (Not facet_values)\n    const number_of_active_facets = Object.values(facets).filter(x => x.length).length\n\n    // Double loop through all clothes and all active facets\n    // Keep only the clothes that match the active facets\n    const to_show = state.all_clothes.map(clothe =>\n      Object.entries(facets).map(([name, values]) =>\n        values.includes(clothe[name])).filter(Boolean).length == number_of_active_facets ? clothe : undefined\n    ).filter(Boolean)\n\n    setState({ ...state, shown_clothes: to_show })\n  }, [state.facets])\n\n  function clearAllFacetValues(facet) {\n    const new_facet = state.facets[facet].map(facet_value => ({\n      ...facet_value, checked: false\n    }))\n    setState({ ...state, facets: { ...state.facets, [facet]: new_facet } })\n  }\n\n  // Function to pass down to the Facet_value component to modify the state in this component.\n  function updateCategory(facet, value, newChecked) {\n    const new_facet = state.facets[facet].map(({ name, checked }) => ({ name: name, checked: name == value ? newChecked : checked }))\n    setState({ ...state, facets: { ...state.facets, [facet]: new_facet } })\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n            <Row>\n            <Col className='border-end' md={3}>\n            <Facets_container facets={state.facets} updateCategory={updateCategory} clearAllFacetValues={clearAllFacetValues} />\n            </Col>\n            <Col>\n            <Container className='d-flex flex-wrap'>\n                {state.shown_clothes.map(x => <Clothes {...x} />)}\n            </Container>\n            </Col>\n        </Row>\n        <br/>\n        <Foot />\n      </div>\n    </Router> \n  );\n}\n\nexport default Services;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}